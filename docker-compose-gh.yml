services:
  dg-marketplace-mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    container_name: mongo-db
    restart: always
    logging:
      options:
        max-size: 0.5g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_URL=${MONGO_URL}
    volumes:
      - mongo-data:/data/db
      - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/
  dg-live-marketplace-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - dg-marketplace-v2:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
  dg-live-marketplace-app:
    build: .
    ports:
      - "${PORT}:${PORT}" # Server port from .env
      - "${WS_PORT}:${WS_PORT}" # WebSocket port from .env
      - "9229:9229" # Expose Node.js debug port
      - "${PROXY_PORT}:${PROXY_PORT}" # Expose Node.js debug port
    environment:
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      API_PROVIDER: ${API_PROVIDER}
      MORALIS_BASE_URL: ${MORALIS_BASE_URL}
      MORALIS_API_KEY: ${MORALIS_API_KEY}
      ALCHEMY_BASE_URL: ${ALCHEMY_BASE_URL}
      ALCHEMY_API_KEY: ${ALCHEMY_API_KEY}
      ALCHEMY_WSS_URL: ${ALCHEMY_WSS_URL}
      INFURA_KEY: ${INFURA_KEY}
      INFURA_KEY_SECRET: ${INFURA_KEY_SECRET}
      ICE_CONTRACT_ADDRESS: ${ICE_CONTRACT_ADDRESS}
      BAG_CONTRACT_ADDRESS: ${BAG_CONTRACT_ADDRESS}
      MARKETPLACE_ADDRESS: ${MARKETPLACE_ADDRESS}
      WSS: ${WSS}
      DB_DIALECT: ${DB_DIALECT}
      DB_SYNC: ${DB_SYNC}
      DB_LOG: ${DB_LOG}
      DB_CONNECTION_TIMEOUT: ${DB_CONNECTION_TIMEOUT}
      DB_RATE_LIMIT_TABLE: ${DB_RATE_LIMIT_TABLE}
      CRON_TIMER: ${CRON_TIMER}
      DG_TOKEN: ${DG_TOKEN}
      RATE_LIMIT_POINTS: ${RATE_LIMIT_POINTS}
      RATE_LIMIT_DURATION: ${RATE_LIMIT_DURATION}
      GH_TOKEN: ${GH_TOKEN}
      BACKEND_WALLET: ${BACKEND_WALLET}
      BACKEND_WALLET_KEY: ${BACKEND_WALLET_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      COINMARKETCAP_API_KEY: ${COINMARKETCAP_API_KEY}
      STRIPE_PAYMENTLINK_EXPIRES: ${STRIPE_PAYMENTLINK_EXPIRES}
      STRIPE_PAYMENTLINK_EXPIRES_IN: ${STRIPE_PAYMENTLINK_EXPIRES_IN}
      STRIPE_WH_SECRET: ${STRIPE_WH_SECRET}
      STRIPE_MINIMUM_PRICE: ${STRIPE_MINIMUM_PRICE}
      STRIPE_BAN_TIME: ${STRIPE_BAN_TIME}
      BINANCE_PAYMENTLINK_EXPIRES: ${BINANCE_PAYMENTLINK_EXPIRES}
      BINANCE_PAYMENTLINK_EXPIRES_IN: ${BINANCE_PAYMENTLINK_EXPIRES_IN}
      BINANCE_MINIMUM_PRICE: ${BINANCE_MINIMUM_PRICE}
      BINANCE_BAN_TIME: ${BINANCE_BAN_TIME}
      BINANCE_API_KEY: ${BINANCE_API_KEY}
      BINANCE_API_SECRET: ${BINANCE_API_SECRET}
      COINBASE_API_KEY: ${COINBASE_API_KEY}
      COINBASE_WH_SECRET: ${COINBASE_WH_SECRET}
      PAPER_API_KEY: ${PAPER_API_KEY}
      PAPER_CONTRACT_ID: ${PAPER_CONTRACT_ID}
      PAPER_CONTRACT_ACCESS_KEY: ${PAPER_CONTRACT_ACCESS_KEY}
      DISCORD_APPLICATION_ID: ${DISCORD_APPLICATION_ID}
      DISCORD_PUBLIC_KEY: ${DISCORD_PUBLIC_KEY}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_BACKEND_NAME: ${DISCORD_BACKEND_NAME}
      MORGAN_LOG: ${MORGAN_LOG}
      DG_DASHBOARD_URL: ${DG_DASHBOARD_URL}
      IMAGE_CHUNK_SIZE: ${IMAGE_CHUNK_SIZE}
      WS_PORT: ${WS_PORT}
      NODE_DOCKER_PORT: ${NODE_DOCKER_PORT}
      DG_DASHBOARD_API_KEY: ${DG_DASHBOARD_API_KEY}
      FILETYPE_SERVICE_URL: ${FILETYPE_SERVICE_URL}
      POLYSCAN_API_KEY: ${POLYSCAN_API_KEY}
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      VALIDATE_DATA_INTERVAL: ${VALIDATE_DATA_INTERVAL}
      NETWORK: ${NETWORK}
      FIRST_BLOCK: ${FIRST_BLOCK}
      BLOCK_CHUNK_SIZE: ${BLOCK_CHUNK_SIZE}
      SUBGRAPH_ENDPOINT: ${SUBGRAPH_ENDPOINT}
      SUBGRAPH_VERSION: ${SUBGRAPH_VERSION}
      LIVE_EVENTS_TIMESPAN: ${LIVE_EVENTS_TIMESPAN}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_URL: ${MONGO_URL}
      PROXY_PROTOCOL: ${PROXY_PROTOCOL}
      PROXY_HOST: ${PROXY_HOST}
      PROXY_PORT: ${PROXY_PORT}
      PROXY_USER: ${PROXY_USER}
      PROXY_PASSWORD: ${PROXY_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_ACCESS_KEY: ${CLOUDFLARE_ACCESS_KEY}
      CLOUDFLARE_ACCESS_KEY_SECRET: ${CLOUDFLARE_ACCESS_KEY_SECRET}
      CLOUDFLARE_R2_BUCKET: ${CLOUDFLARE_R2_BUCKET}
      CLOUDFARE_R2_TOKEN: ${CLOUDFARE_R2_TOKEN}
      CLOUDFARE_R2_JURISDICTION: ${CLOUDFARE_R2_JURISDICTION}
      CLOUDFARE_IMAGE_API_TOKEN: ${CLOUDFARE_IMAGE_API_TOKEN}
      VERCEL_TOKEN: ${VERCEL_TOKEN}
      VERCEL_TEAM_ID: ${VERCEL_TEAM_ID}
      VERCEL_PROJECT_ID: ${VERCEL_PROJECT_ID}
      BLAST_RPC: ${BLAST_RPC}
    command:
      [
        "./wait-for-it.sh",
        "-t",
        "120",
        "dg-live-marketplace-db:3306",
        "--",
        "npm",
        "run",
        "start:debug",
      ]
    depends_on:
      - dg-live-marketplace-db

volumes:
  dg-marketplace-v2:
    driver: local
  mongo-data:
    driver: local
